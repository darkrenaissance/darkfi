k = 13;

constant "DaoVoteInput" {
	EcFixedPointBase NULLIFIER_K,
	EcFixedPoint VALUE_COMMIT_RANDOM,
	EcFixedPointShort VALUE_COMMIT_VALUE,
}

witness "DaoVoteInput" {
	Base secret,
	Base serial,
	Base spend_hook,
	Base user_data,
	Base value,
	Base gov_token_id,
	Scalar value_blind,
	Base gov_token_blind,
	Uint32 leaf_pos,
	MerklePath path,
	Base signature_secret,
}

circuit "DaoVoteInput" {
	nullifier = poseidon_hash(secret, serial);
	constrain_instance(nullifier);

	vcv = ec_mul_short(value, VALUE_COMMIT_VALUE);
	vcr = ec_mul(value_blind, VALUE_COMMIT_RANDOM);
	value_commit = ec_add(vcv, vcr);
	constrain_instance(ec_get_x(value_commit));
	constrain_instance(ec_get_y(value_commit));

	token_commit = poseidon_hash(gov_token_id, gov_token_blind);
	constrain_instance(token_commit);

	pub = ec_mul_base(secret, NULLIFIER_K);
	pub_x = ec_get_x(pub);
	pub_y = ec_get_y(pub);
	C = poseidon_hash(
		pub_x,
		pub_y,
		value,
		gov_token_id,
		serial,
		spend_hook,
		user_data,
	);

	# Merkle root
	root = merkle_root(leaf_pos, path, C);
	constrain_instance(root);

	signature_public = ec_mul_base(signature_secret, NULLIFIER_K);
	constrain_instance(ec_get_x(signature_public));
	constrain_instance(ec_get_y(signature_public));
}
