(function() {
    var implementors = Object.fromEntries([["darkfi",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"enum\" href=\"darkfi/rpc/util/enum.JsonValue.html\" title=\"enum darkfi::rpc::util::JsonValue\">JsonValue</a>&gt; for <a class=\"struct\" href=\"darkfi/rpc/jsonrpc/struct.JsonError.html\" title=\"struct darkfi::rpc::jsonrpc::JsonError\">JsonError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"enum\" href=\"darkfi/rpc/util/enum.JsonValue.html\" title=\"enum darkfi::rpc::util::JsonValue\">JsonValue</a>&gt; for <a class=\"struct\" href=\"darkfi/rpc/jsonrpc/struct.JsonNotification.html\" title=\"struct darkfi::rpc::jsonrpc::JsonNotification\">JsonNotification</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"enum\" href=\"darkfi/rpc/util/enum.JsonValue.html\" title=\"enum darkfi::rpc::util::JsonValue\">JsonValue</a>&gt; for <a class=\"struct\" href=\"darkfi/rpc/jsonrpc/struct.JsonRequest.html\" title=\"struct darkfi::rpc::jsonrpc::JsonRequest\">JsonRequest</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"enum\" href=\"darkfi/rpc/util/enum.JsonValue.html\" title=\"enum darkfi::rpc::util::JsonValue\">JsonValue</a>&gt; for <a class=\"struct\" href=\"darkfi/rpc/jsonrpc/struct.JsonResponse.html\" title=\"struct darkfi::rpc::jsonrpc::JsonResponse\">JsonResponse</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/rpc/jsonrpc/enum.JsonResult.html\" title=\"enum darkfi::rpc::jsonrpc::JsonResult\">JsonResult</a>&gt; for <a class=\"struct\" href=\"darkfi/rpc/jsonrpc/struct.JsonError.html\" title=\"struct darkfi::rpc::jsonrpc::JsonError\">JsonError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/rpc/jsonrpc/enum.JsonResult.html\" title=\"enum darkfi::rpc::jsonrpc::JsonResult\">JsonResult</a>&gt; for <a class=\"struct\" href=\"darkfi/rpc/jsonrpc/struct.JsonResponse.html\" title=\"struct darkfi::rpc::jsonrpc::JsonResponse\">JsonResponse</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for <a class=\"struct\" href=\"darkfi/zk/halo2/struct.AssignedCell.html\" title=\"struct darkfi::zk::halo2::AssignedCell\">AssignedCell</a>&lt;Base, Base&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for <a class=\"struct\" href=\"darkfi/zk/halo2/struct.Value.html\" title=\"struct darkfi::zk::halo2::Value\">Value</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.u32.html\">u32</a>&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for <a class=\"struct\" href=\"darkfi/zk/halo2/struct.Value.html\" title=\"struct darkfi::zk::halo2::Value\">Value</a>&lt;[Base; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.array.html\">255</a>]&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for <a class=\"struct\" href=\"darkfi/zk/halo2/struct.Value.html\" title=\"struct darkfi::zk::halo2::Value\">Value</a>&lt;[Base; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.array.html\">32</a>]&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for FixedPoint&lt;Affine, EccChip&lt;<a class=\"enum\" href=\"darkfi_sdk/crypto/constants/fixed_bases/enum.OrchardFixedBases.html\" title=\"enum darkfi_sdk::crypto::constants::fixed_bases::OrchardFixedBases\">OrchardFixedBases</a>&gt;&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for FixedPointBaseField&lt;Affine, EccChip&lt;<a class=\"enum\" href=\"darkfi_sdk/crypto/constants/fixed_bases/enum.OrchardFixedBases.html\" title=\"enum darkfi_sdk::crypto::constants::fixed_bases::OrchardFixedBases\">OrchardFixedBases</a>&gt;&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for FixedPointShort&lt;Affine, EccChip&lt;<a class=\"enum\" href=\"darkfi_sdk/crypto/constants/fixed_bases/enum.OrchardFixedBases.html\" title=\"enum darkfi_sdk::crypto::constants::fixed_bases::OrchardFixedBases\">OrchardFixedBases</a>&gt;&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for NonIdentityPoint&lt;Affine, EccChip&lt;<a class=\"enum\" href=\"darkfi_sdk/crypto/constants/fixed_bases/enum.OrchardFixedBases.html\" title=\"enum darkfi_sdk::crypto::constants::fixed_bases::OrchardFixedBases\">OrchardFixedBases</a>&gt;&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for Point&lt;Affine, EccChip&lt;<a class=\"enum\" href=\"darkfi_sdk/crypto/constants/fixed_bases/enum.OrchardFixedBases.html\" title=\"enum darkfi_sdk::crypto::constants::fixed_bases::OrchardFixedBases\">OrchardFixedBases</a>&gt;&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"darkfi/zk/vm_heap/enum.HeapVar.html\" title=\"enum darkfi::zk::vm_heap::HeapVar\">HeapVar</a>&gt; for ScalarFixed&lt;Affine, EccChip&lt;<a class=\"enum\" href=\"darkfi_sdk/crypto/constants/fixed_bases/enum.OrchardFixedBases.html\" title=\"enum darkfi_sdk::crypto::constants::fixed_bases::OrchardFixedBases\">OrchardFixedBases</a>&gt;&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"enum\" href=\"darkfi/net/hosts/enum.HostColor.html\" title=\"enum darkfi::net::hosts::HostColor\">HostColor</a>"]]],["darkfi_dao_contract",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"darkfi_dao_contract/enum.DaoFunction.html\" title=\"enum darkfi_dao_contract::DaoFunction\">DaoFunction</a>"]]],["darkfi_deployooor_contract",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"darkfi_deployooor_contract/enum.DeployFunction.html\" title=\"enum darkfi_deployooor_contract::DeployFunction\">DeployFunction</a>"]]],["darkfi_money_contract",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"darkfi_money_contract/enum.MoneyFunction.html\" title=\"enum darkfi_money_contract::MoneyFunction\">MoneyFunction</a>"]]],["darkfi_sdk",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Ep&gt; for <a class=\"struct\" href=\"darkfi_sdk/crypto/keypair/struct.PublicKey.html\" title=\"struct darkfi_sdk::crypto::keypair::PublicKey\">PublicKey</a>"]]],["explorerd",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt; for <a class=\"struct\" href=\"explorerd/config/struct.ExplorerConfig.html\" title=\"struct explorerd::config::ExplorerConfig\">ExplorerConfig</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;(&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>, &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.91.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>)&gt; for <a class=\"struct\" href=\"explorerd/config/struct.ExplorerNetworkConfig.html\" title=\"struct explorerd::config::ExplorerNetworkConfig\">ExplorerNetworkConfig</a>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[8073,417,447,429,331,1091]}