(function() {
    var type_impls = Object.fromEntries([["darkfi",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    A26: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26), Rets, WithoutEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    A26: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self, rt: BackendKind) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback_sys\" class=\"method trait-impl\"><a href=\"#method.function_callback_sys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback_sys</a>(&amp;self) -&gt; VMFunctionCallback</h4></section></summary><div class='docblock'>Get the pointer to the function body for a given runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; VMTrampoline</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline for a given runtime.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26), Rets, WithEnv>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.91.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.91.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","darkfi::net::settings::BlacklistEntry","darkfi::zkas::parser::Parsed"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[246037]}